name: build-deploy

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build & Push nginx Docker image
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}
          docker build -t ${{ steps.login-ecr.outputs.registry }}/ecr_nginx:$IMAGE_TAG ./nginx
          docker push ${{ steps.login-ecr.outputs.registry }}/ecr_nginx:$IMAGE_TAG

      - name: Build & Push tomcat Docker image
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}
          docker build -t ${{ steps.login-ecr.outputs.registry }}/ecr_tomcat:$IMAGE_TAG ./tomcat
          docker push ${{ steps.login-ecr.outputs.registry }}/ecr_tomcat:$IMAGE_TAG

      - name: Create deployment bundle
        run: |
          mkdir -p deploy
          echo "nginx:${{ steps.login-ecr.outputs.registry }}/ecr_nginx:${GITHUB_SHA::7}" > deploy/images.txt
          echo "tomcat:${{ steps.login-ecr.outputs.registry }}/ecr_tomcat:${GITHUB_SHA::7}" >> deploy/images.txt
          zip -r deploy.zip deploy/

      - name: Upload bundle to S3
        run: |
          aws s3 cp deploy.zip s3://${{ secrets.AWS_S3_BUCKET }}/deploy.zip

      - name: Deploy to EC2/ECS with CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name ${{ secrets.CODEDEPLOY_APP_NAME }} \
            --deployment-group-name ${{ secrets.CODEDEPLOY_GROUP_NAME }} \
            --s3-location bucket=${{ secrets.AWS_S3_BUCKET }},key=deploy.zip,bundleType=zip
